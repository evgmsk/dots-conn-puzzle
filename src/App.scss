@import "assets/scss/constant";

.app {
  padding: 30px 0 10px;
  position: relative;
  background-color: #252324;
  border-radius: 10px;
  display: flex;
  align-items: flex-start;
  justify-content: center;
  box-sizing: border-box;
  min-height: 100vh;
  max-height: 100vh;
  @media screen and (min-aspect-ratio: 100/101) and (max-height: $device) {
    transform: rotate(90deg);
    min-height: 100vw;
    max-height: 100vw;
  }
}

.close-modal-btn {
  position: absolute;
  right: 10px;
  top: 10px;
  width: 2rem;
  height: 2rem;
  background-color: transparent;
  border-radius: 50%;
  border: unset;
  padding: unset;
  color: white;
}

.loading-spinner_puzzles {
  display: inline-block;
  position: relative;
  width: 2rem;
  height: 2rem;
  &:after {
    content: " ";
    display: block;
    border-radius: 50%;
    width: 0;
    height: 0;
    margin: 8px;
    box-sizing: border-box;
    border: 1.8rem solid lightblue;
    border-color: lightblue transparent lightblue transparent;
    animation: spinner 1.2s infinite;
  }
}

.animated-component {
  position: relative;
  opacity: 0;
  transition: opacity .4s;
  &.show-up {
    opacity: 1;
  }
}

.dots-conn-puzzle {
  // border: solid 2px black;
  &_resolver {
    transition: opacity .8s;
    opacity: 0;
    &.show-up {
      opacity: 1;
    }
    @media screen and (min-aspect-ratio: 100/101) and (max-height: $device) {
      max-width: 100vh;
    }
  }

  &_creator {
    transition: opacity .8s;
    height: auto;
    @media screen and (min-aspect-ratio: 100/101) and (max-height: $device) {
      width: 90vh;
    }
  }

  &_body {
    position: relative;
    background-color: aliceblue;
    border-radius: 10px;
    border: solid 1px gray;
    $width: 80vw;
    min-width: 360px;
    max-height: 70vh;
    width: $width;
    max-width: $puzzle-max-width;
    @for $i from 3 to 30 {
      @for $j from 3 to 40 {
        &.size-#{$i}-#{$j} {
          height:  $width / $i * $j;
          max-height:  $puzzle-max-width / $i * $j;
          display: grid;
          grid-template-columns: repeat(#{$i}, 1fr);
          grid-template-rows: repeat(#{$j}, 1fr);
          .c-0-#{$j - 1} {
            border-bottom-left-radius: 10px;
          }
          .c-#{$i - 1}-#{$j - 1} {
            border-bottom-right-radius: 10px;
          }
          .c-#{$i - 1}-0 {
            border-top-right-radius: 10px;
          }
        }
      }
    }
  }
}

@keyframes spinner {
  0% {
    transform: rotate(0);
    animation-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);
  }
  50% {
    transform: rotate(900deg);
    animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
  }
  100% {
    transform: rotate(1800deg);
  }
}
